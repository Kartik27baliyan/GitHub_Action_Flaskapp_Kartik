name: Flask App CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Run Tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        python -m pytest test_app.py -v

  deploy-staging:
    name: Deploy to Staging Environment
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Display Deployment Message
      run: echo "This would deploy to STAGING! Successfully tested on Python ${{ matrix.python-version }}"

  deploy-production:
    name: Deploy to Production Environment
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Display Deployment Message
      run: echo "This would deploy to PRODUCTION! Successfully tested on Python ${{ matrix.python-version }}"
