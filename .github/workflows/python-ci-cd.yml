name: Python CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        pytest test_app.py -v --junitxml=test-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.xml

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Application: Flask GitHub Actions App"
        echo "Branch: ${{ github.ref }}"
        echo "Deployment triggered by: ${{ github.actor }}"
        # Add your actual deployment commands here

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Deploy to production
      run: |
        echo "DEPLOYING TO PRODUCTION!"
        echo "Release: ${{ github.event.release.tag_name }}"
        echo "Deployment triggered by: ${{ github.actor }}"
        # Add your actual production deployment commands here
