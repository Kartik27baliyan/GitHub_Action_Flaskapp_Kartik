name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install flask pytest python-dotenv

    - name: Run tests
      run: python -m pytest test_app.py -v
      build:
      needs: test
      runs-on: ubuntu-latest
      steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build application
      run: |
        echo "Building application..."
        echo "Build completed successfully!"
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build application
      run: |
        echo "Building Flask application..."
        echo "✅Build completed successfully!"

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "✅Staging deployment completed!"
        echo "Using secret: ${{ secrets.STAGING_SERVER_URL }}"

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to production
      run: |
        echo "DEPLOYING TO PRODUCTION!"
        echo "✅Production deployment successful!"
        echo "Release: ${{ github.event.release.tag_name }}"
        echo "Using secret: ${{ secrets.PRODUCTION_SERVER_URL }}"
