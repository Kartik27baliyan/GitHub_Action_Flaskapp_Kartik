name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
    Contents: read
    pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    with:
      ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install flask pytest python-dotenv

    - name: Run tests
      run: python -m pytest test_app.py -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build application
      run: |
        echo "ðŸ“¦ Building Flask application..."
        echo "âœ…Build completed successfully!"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "âœ…Staging deployment completed!"

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to production
      run: |
        echo "DEPLOYING TO PRODUCTION!"
        echo "âœ…Production deployment successful!"
